org: ${file(../common-config.yml):org}
service: ${file(../common-config.yml):service}
app: tucker

frameworkVersion: ">=4"
configValidationMode: ${file(../common-config.yml):configValidationMode}

# Remove files that
package:
  patterns:
    - '!.idea/**'
    - '!aws-resources/**'
    - '!.gitignore/**'

provider:
  name: aws
  region: ${file(../common-config.yml):region}
  stage: ${opt:stage, 'dev'}
  stackTags:
    app: tucker
    service: front-tucker
  memorySize: 128   # As small as possible
  timeout: 15   # Latency should not be more than 5 s
  stackName: ${self:service}-${self:app}-${self:provider.stage}
  versionFunctions: false
  logRetentionInDays: 3

  apiGateway:
    usagePlan:
      quota:
        limit: 5000
        period: MONTH
      throttle:
        burstLimit: 50
        rateLimit: 20

  environment:
    API_STAGE: ${self:provider.stage}
    ACCOUNT_ID: ${aws:accountId}



functions:
  - ${file(aws-resources/api-gateway/authorizers.yml)}
  - ${file(aws-resources/api-gateway/agenda-routes.yml)}

plugins:
  - serverless-domain-manager

custom:
#  dynamoDB:
#    classRegistrationTable: "ft-class-registration-table-${self:provider.stage}"

  customDomain:
    domainName: "${opt:stage, 'dev'}-api.${file(../common-config.yml):domain}"
    stage: ${opt:stage, 'dev'}
    hostedZoneId: Z094454117QPI2R4W783E
    certificateName: "*.${file(../common-config.yml):domain}"
    createRoute53Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: rest